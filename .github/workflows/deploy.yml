name: Nuxt CD

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  REPO_NAME: ${{ github.event.repository.name }}
  OLD_TAG: ${{ '' }}
  NEW_TAG: ${{ github.ref_name }}
  IN_PORT: 1000
  OUT_PORT: 3000

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Export
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: 'algostract/${{ env.REPO_NAME }}:${{ env.NEW_TAG }}'
          build-args: TAG=${{ env.NEW_TAG }}

      # - name: Upload artifact to VPS
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
      #     port: 22
      #     source: /tmp/artifact.tar
      #     target: ~/${{ env.REPO_NAME }}
      #     overwrite: true
      #     # rm: true
      #     # strip_components: 1

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-24.04
  #   steps:
  #     #    docker pull ghcr.io/${{ github.actor }}/${{ github.repository }}:latest
  #     - name: Deploy to VPS
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         password: ${{ secrets.PASSWORD }}
  #         script: |
  #           docker stop ${{ env.REPO_NAME }}-${{ env.OLD_TAG }}
  #           docker rm ${{ env.REPO_NAME }}-${{ env.OLD_TAG }}
  #           docker rmi ${{ env.REPO_NAME }}:${{ env.OLD_TAG }}
  #           docker load --input ~/${{ env.REPO_NAME }}/artifact.tar
  #           docker run --name ${{ env.REPO_NAME }}-${{ env.NEW_TAG }} --env-file .env.prod -p ${{ env.IN_PORT }}:${{ env.OUT_PORT }} -d ${{ env.REPO_NAME }}:${{ env.NEW_TAG }}
