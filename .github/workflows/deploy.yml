name: Nuxt CD

run-name: ${{ github.ref_name }}

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

concurrency: ${{ github.workflow }}-${{ github.ref_name }}

env:
  REPO: ${{ github.repository }}
  REGISTRY: ghcr.io
  IMAGE_NAME:
  IMAGE_TITLE:
  BUILDTIME:
  VERSION:
  PORT: 1000

jobs:
  build:
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} # ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }} # ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}

      - name: Set tags as environment variable
        run: echo "Setting metadata to env variables"
        env:
          IMAGE_NAME: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          IMAGE_TITLE: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.title'] }}
          BUILDTIME: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          VERSION: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ env.BUILDTIME }}
            VERSION=${{ env.VERSION }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.REPO }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy:
    needs: build
    runs-on: ubuntu-24.04

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            docker ps -q --filter ancestor=${{ env.IMAGE_NAME }} | xargs -r docker stop
            docker ps -a -q --filter ancestor=${{ env.IMAGE_NAME }} | xargs -r docker rm
            docker rmi ${{ env.IMAGE_NAME }}
            docker pull ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            docker run --name ${{ env.IMAGE_TITLE }} --env-file  ~/${{ env.IMAGE_TITLE }}/.env.prod -p ${{ env.PORT }}:3000 ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
